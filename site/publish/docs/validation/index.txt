1:"$Sreact.fragment"
2:I[7740,["177","static/chunks/app/layout-da5425ed4b9f6364.js"],"ThemeProvider"]
3:I[7555,[],""]
4:I[1901,["874","static/chunks/874-994f48b66e83c627.js","39","static/chunks/app/error-7fbbcffb8614ab2c.js"],"default"]
5:I[1295,[],""]
6:I[6874,["874","static/chunks/874-994f48b66e83c627.js","345","static/chunks/app/not-found-b14baa73986bd718.js"],""]
7:I[9243,["499","static/chunks/app/docs/layout-9c00b23166a276ed.js"],""]
9:I[9665,[],"OutletBoundary"]
c:I[4911,[],"AsyncMetadataOutlet"]
e:I[9665,[],"ViewportBoundary"]
10:I[9665,[],"MetadataBoundary"]
12:I[6614,[],""]
:HL["/_next/static/css/6a30088796e530ee.css","style"]
0:{"P":null,"b":"0YmaOTYzH6ie782YfQ5i2","p":"","c":["","docs","validation",""],"i":false,"f":[[["",{"children":["docs",{"children":[["slug","validation","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/6a30088796e530ee.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              (function() {\n                try {\n                  const savedTheme = localStorage.getItem('formdown-theme');\n                  const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n                  const theme = savedTheme || (systemPrefersDark ? 'dark' : 'light');\n                  \n                  if (theme === 'dark') {\n                    document.documentElement.classList.add('dark');\n                    document.body.classList.add('dark');\n                  }\n                } catch (e) {\n                  // Silently fail\n                }\n              })();\n            "}}],["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"SoftwareApplication\",\"name\":\"Formdown\",\"description\":\"Create beautiful, interactive HTML forms using a simple markdown-like syntax\",\"applicationCategory\":\"DeveloperApplication\",\"operatingSystem\":\"Web Browser\",\"offers\":{\"@type\":\"Offer\",\"price\":\"0\",\"priceCurrency\":\"USD\"},\"creator\":{\"@type\":\"Organization\",\"name\":\"iyulab\",\"url\":\"https://github.com/iyulab\"},\"url\":\"https://formdown.dev\",\"downloadUrl\":\"https://github.com/iyulab/formdown\",\"sameAs\":[\"https://github.com/iyulab/formdown\",\"https://www.npmjs.com/package/@formdown/core\"]}"}}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com","crossOrigin":"anonymous"}]]}],["$","body",null,{"className":"__variable_188709 __variable_9a8899 antialiased","children":["$","$L2",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$4","errorStyles":[],"errorScripts":[],"template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","div",null,{"className":"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100","children":["$","div",null,{"className":"text-center max-w-md mx-auto px-4","children":[["$","h1",null,{"className":"text-6xl font-bold text-blue-600 mb-4","children":"404"}],["$","h2",null,{"className":"text-2xl font-bold text-gray-900 mb-4","children":"Page Not Found"}],["$","p",null,{"className":"text-gray-600 mb-8","children":"The page you are looking for might have been removed, had its name changed, or is temporarily unavailable."}],["$","div",null,{"className":"space-x-4","children":[["$","$L6",null,{"href":"/","className":"bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors inline-block","children":"Go Home"}],["$","$L6",null,{"href":"/docs","className":"bg-gray-100 text-gray-700 px-6 py-3 rounded-lg font-semibold hover:bg-gray-200 transition-colors inline-block","children":"View Docs"}]]}]]}]}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]]}],{"children":["docs",["$","$1","c",{"children":[null,["$","div",null,{"className":"docs-layout","children":[["$","$L7",null,{"src":"https://cdn.jsdelivr.net/npm/@formdown/editor@latest/dist/standalone.js","strategy":"beforeInteractive"}],["$","$L7",null,{"src":"https://cdn.jsdelivr.net/npm/@formdown/ui@latest/dist/standalone.js","strategy":"beforeInteractive"}],["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}]]}],{"children":[["slug","validation","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L8",null,["$","$L9",null,{"children":["$La","$Lb",["$","$Lc",null,{"promise":"$@d"}]]}]]}],{},null,false]},null,false]},null,false]},[["$","div","l",{"className":"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100","children":["$","div",null,{"className":"text-center","children":[["$","div",null,{"className":"inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4"}],["$","p",null,{"className":"text-gray-600","children":"Loading Formdown..."}]]}]}],[],[]],false],["$","$1","h",{"children":[null,["$","$1","vaJmmeDya63Zt398ZojEUv",{"children":[["$","$Le",null,{"children":"$Lf"}],null]}],["$","$L10",null,{"children":"$L11"}]]}],false]],"m":"$undefined","G":["$12","$undefined"],"s":false,"S":true}
13:"$Sreact.suspense"
14:I[4911,[],"AsyncMetadata"]
16:I[984,["874","static/chunks/874-994f48b66e83c627.js","375","static/chunks/375-811e0189f6b673fa.js","508","static/chunks/app/docs/%5Bslug%5D/page-1286a5c53c96b553.js"],"default"]
11:["$","div",null,{"hidden":true,"children":["$","$13",null,{"fallback":null,"children":["$","$L14",null,{"promise":"$@15"}]}]}]
17:T629,prose prose-lg max-w-none   prose-headings:text-gray-900 dark:prose-headings:text-white prose-headings:font-semibold   prose-h1:text-2xl prose-h1:border-b prose-h1:border-gray-200 dark:prose-h1:border-gray-700 prose-h1:pb-3 prose-h1:mb-6   prose-h2:text-xl prose-h2:mt-8 prose-h2:mb-4   prose-h3:text-lg prose-h3:mt-6 prose-h3:mb-3   prose-p:text-gray-700 dark:prose-p:text-gray-300 prose-p:leading-relaxed   prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-a:no-underline hover:prose-a:underline   prose-strong:text-gray-900 dark:prose-strong:text-white prose-strong:font-semibold   prose-code:text-pink-600 dark:prose-code:text-pink-400 prose-code:bg-pink-50 dark:prose-code:bg-pink-900/30 prose-code:px-1.5 prose-code:py-0.5 prose-code:rounded prose-code:text-sm   prose-pre:bg-gray-900 dark:prose-pre:bg-black prose-pre:text-gray-100 dark:prose-pre:text-gray-200 prose-pre:rounded-lg prose-pre:p-4   prose-blockquote:border-l-4 prose-blockquote:border-blue-200 dark:prose-blockquote:border-blue-700 prose-blockquote:bg-blue-50 dark:prose-blockquote:bg-blue-900/20 prose-blockquote:pl-4 prose-blockquote:py-2   prose-ul:my-4 prose-ol:my-4   prose-li:text-gray-700 dark:prose-li:text-gray-300   prose-table:border-collapse prose-table:border prose-table:border-gray-300 dark:prose-table:border-gray-600   prose-th:bg-gray-50 dark:prose-th:bg-gray-800 prose-th:border prose-th:border-gray-300 dark:prose-th:border-gray-600 prose-th:px-3 prose-th:py-2 prose-th:text-left   prose-td:border prose-td:border-gray-300 dark:prose-td:border-gray-600 prose-td:px-3 prose-td:py-218:T96eb,<p>Formdown provides comprehensive client-side validation with visual feedback and programmatic access to validation results.</p>
<h2>Overview</h2>
<p>Both <code>&lt;formdown-ui&gt;</code> and <code>&lt;formdown-editor&gt;</code> components support form validation through the <code>validate()</code> method. When validation errors occur, fields are automatically highlighted with visual feedback.</p>
<h2>Validation Methods</h2>
<h3><code>validate()</code></h3>
<p>Returns a validation result object with error details and applies visual feedback to invalid fields.</p>
<pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'formdown-ui'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Form is valid!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Proceed with form submission</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Validation errors:'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>errors<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Handle validation errors</span>
<span class="token punctuation">}</span></code></pre><p><strong>Return Type:</strong></p>
<pre class="language-typescript"><code class="language-typescript"><span class="token keyword">interface</span> <span class="token class-name">ValidationResult</span> <span class="token punctuation">{</span>
    isValid<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    errors<span class="token operator">:</span> FieldError<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">FieldError</span> <span class="token punctuation">{</span>
    field<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>    <span class="token comment">// Field name that failed validation</span>
    message<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>  <span class="token comment">// Human-readable error message</span>
<span class="token punctuation">}</span></code></pre><h2>Built-in Validation Rules</h2>
<h3>Required Fields</h3>
<pre class="language-markup"><code class="language-markup">@name: [text required]
@email: [email required] 
@terms: [checkbox required]</code></pre><h3>Input Type Validation</h3>
<ul>
<li><strong>Email</strong>: Validates email format</li>
<li><strong>URL</strong>: Validates URL format  </li>
<li><strong>Tel</strong>: Validates phone number format</li>
<li><strong>Number</strong>: Validates numeric input</li>
</ul>
<pre class="language-markup"><code class="language-markup">@email: [email required]
@website: [url]
@phone: [tel]
@age: [number min=18 max=120]</code></pre><h3>Length Validation</h3>
<pre class="language-markup"><code class="language-markup">@username: [text required minlength=3 maxlength=20]
@bio: [textarea maxlength=500]</code></pre><h3>Pattern Validation</h3>
<pre class="language-markup"><code class="language-markup">@username: [text pattern="[a-zA-Z0-9_]+" title="Only letters, numbers, and underscores"]
@zip: [text pattern="[0-9]{5}" title="5-digit ZIP code"]</code></pre><h3>Range Validation</h3>
<pre class="language-markup"><code class="language-markup">@age: [number min=18 max=65]
@rating: [number min=1 max=5 step=0.5]
@birthdate: [date min="1900-01-01" max="2010-01-01"]</code></pre><h2>Visual Feedback</h2>
<h3>Error States</h3>
<p>Fields that fail validation automatically receive:</p>
<ul>
<li>Red border color (<code>border-color: #dc2626</code>)</li>
<li>Error box shadow</li>
<li>Error message below the field</li>
</ul>
<h3>Valid States</h3>
<p>Fields that pass validation receive:</p>
<ul>
<li>Green border color (<code>border-color: #10b981</code>)</li>
<li>Success box shadow</li>
</ul>
<h3>CSS Classes</h3>
<p>You can style validation states using these classes:</p>
<ul>
<li><code>.field-error</code>: Applied to invalid fields</li>
<li><code>.field-valid</code>: Applied to valid fields  </li>
<li><code>.validation-error-message</code>: Applied to error message elements</li>
</ul>
<pre class="language-css"><code class="language-css"><span class="token comment">/* Custom error styling */</span>
<span class="token selector">.field-error</span> <span class="token punctuation">{</span>
    <span class="token property">border-color</span><span class="token punctuation">:</span> #ef4444 <span class="token important">!important</span><span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #fef2f2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.validation-error-message</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #dc2626<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 0.75rem<span class="token punctuation">;</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre><h2>JavaScript Examples</h2>
<h3>Basic Validation</h3>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>formdown-ui</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>contact-form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
@name: [text required]
@email: [email required]
@phone: [tel]
@message: [textarea required minlength=10]
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>formdown-ui</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">function</span> <span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'contact-form'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> validation <span class="token operator">=</span> form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>validation<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> data <span class="token operator">=</span> form<span class="token punctuation">.</span><span class="token function">getFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Submitting:'</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Submit to server</span>
        <span class="token function">submitToServer</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Validation failed:'</span><span class="token punctuation">,</span> validation<span class="token punctuation">.</span>errors<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Show error summary</span>
        <span class="token function">showErrorSummary</span><span class="token punctuation">(</span>validation<span class="token punctuation">.</span>errors<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">showErrorSummary</span><span class="token punctuation">(</span><span class="token parameter">errors</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> messages <span class="token operator">=</span> errors<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token punctuation">.</span>field<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>err<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Please fix the following errors:\n'</span> <span class="token operator">+</span> messages<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3>Real-time Validation</h3>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>formdown-ui</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signup-form<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
@username: [text required minlength=3]
@password: [password required minlength=8]
@confirmPassword: [password required]
@email: [email required]
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>formdown-ui</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'signup-form'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Validate on every change</span>
form<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'formdown-change'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">updateSubmitButton</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Custom password confirmation check</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> form<span class="token punctuation">.</span><span class="token function">getFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>password <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>confirmPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">validatePasswordMatch</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>password<span class="token punctuation">,</span> data<span class="token punctuation">.</span>confirmPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">updateSubmitButton</span><span class="token punctuation">(</span><span class="token parameter">isValid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> submitBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'submit-btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>submitBtn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        submitBtn<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token operator">!</span>isValid<span class="token punctuation">;</span>
        submitBtn<span class="token punctuation">.</span>textContent <span class="token operator">=</span> isValid <span class="token operator">?</span> <span class="token string">'Submit'</span> <span class="token operator">:</span> <span class="token string">'Please fix errors'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">validatePasswordMatch</span><span class="token punctuation">(</span><span class="token parameter">password<span class="token punctuation">,</span> confirmPassword</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> confirmField <span class="token operator">=</span> form<span class="token punctuation">.</span>shadowRoot<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input[name="confirmPassword"]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>password <span class="token operator">!==</span> confirmPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        confirmField<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'field-error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Add custom error message</span>
        <span class="token function">addCustomError</span><span class="token punctuation">(</span>confirmField<span class="token punctuation">,</span> <span class="token string">'Passwords do not match'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        confirmField<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'field-error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">removeCustomError</span><span class="token punctuation">(</span>confirmField<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h3>Editor Validation</h3>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>formdown-editor</span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>split<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-editor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
@title: [text required maxlength=100]
@description: [textarea required minlength=20]
@category: [select required]
  - Technology
  - Design
  - Business
@tags: [text pattern="[a-z,\s]+" title="Lowercase letters and commas only"]
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>formdown-editor</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>validation-status<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> editor <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'form-editor'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Validate preview on content change</span>
editor<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'contentChange'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> editor<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">updateValidationStatus</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Small delay to allow UI update</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">updateValidationStatus</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> status <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'validation-status'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        status<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'✅ Preview form is valid'</span><span class="token punctuation">;</span>
        status<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'text-green-600'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> errorCount <span class="token operator">=</span> result<span class="token punctuation">.</span>errors<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        status<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">❌ Preview form has </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>errorCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> error(s)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
        status<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'text-red-600'</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h2>Custom Validation</h2>
<p>While Formdown provides comprehensive built-in validation, you can add custom validation logic:</p>
<pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">customValidation</span><span class="token punctuation">(</span><span class="token parameter">formData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> errors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    
    <span class="token comment">// Custom business rules</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>formData<span class="token punctuation">.</span>age <span class="token operator">&amp;&amp;</span> formData<span class="token punctuation">.</span>category <span class="token operator">===</span> <span class="token string">'senior'</span> <span class="token operator">&amp;&amp;</span> formData<span class="token punctuation">.</span>age <span class="token operator">&lt;</span> <span class="token number">65</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        errors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Senior category requires age 65 or older'</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// Cross-field validation</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>formData<span class="token punctuation">.</span>startDate <span class="token operator">&amp;&amp;</span> formData<span class="token punctuation">.</span>endDate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>formData<span class="token punctuation">.</span>startDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> end <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>formData<span class="token punctuation">.</span>endDate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">>=</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            errors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">'endDate'</span><span class="token punctuation">,</span> 
                <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'End date must be after start date'</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> errors<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Use with built-in validation</span>
<span class="token keyword">function</span> <span class="token function">validateWithCustomRules</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'formdown-ui'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> builtInResult <span class="token operator">=</span> form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> form<span class="token punctuation">.</span><span class="token function">getFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> customErrors <span class="token operator">=</span> <span class="token function">customValidation</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">isValid</span><span class="token operator">:</span> builtInResult<span class="token punctuation">.</span>isValid <span class="token operator">&amp;&amp;</span> customErrors<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token literal-property property">errors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>builtInResult<span class="token punctuation">.</span>errors<span class="token punctuation">,</span> <span class="token operator">...</span>customErrors<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre><h2>Error Handling</h2>
<h3>Graceful Degradation</h3>
<pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">safeValidate</span><span class="token punctuation">(</span><span class="token parameter">form</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> form<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">'Validation failed:'</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">isValid</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token literal-property property">errors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">'general'</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Validation unavailable'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></code></pre><h3>Accessibility</h3>
<p>Validation errors are announced to screen readers through:</p>
<ul>
<li>ARIA labels on invalid fields</li>
<li>Error messages linked to fields via <code>aria-describedby</code></li>
<li>Visual focus indicators for keyboard navigation</li>
</ul>
<h2>Best Practices</h2>
<ol>
<li><strong>Validate early and often</strong> - Use real-time validation for better UX</li>
<li><strong>Clear error messages</strong> - Make validation errors specific and actionable</li>
<li><strong>Visual hierarchy</strong> - Use color, icons, and typography to guide attention  </li>
<li><strong>Accessibility first</strong> - Ensure validation works with assistive technologies</li>
<li><strong>Custom validation</strong> - Supplement built-in rules with business logic</li>
<li><strong>Error recovery</strong> - Clear validation states when fields are corrected</li>
<li><strong>Submit protection</strong> - Disable submit buttons when validation fails</li>
</ol>
<h2>Validation Attributes Reference</h2>
<table>
<thead>
<tr>
<th>Attribute</th>
<th>Types</th>
<th>Description</th>
<th>Example</th>
</tr>
</thead>
<tbody><tr>
<td><code>required</code></td>
<td>All</td>
<td>Field must have a value</td>
<td><code>[text required]</code></td>
</tr>
<tr>
<td><code>minlength</code></td>
<td>text, textarea</td>
<td>Minimum character length</td>
<td><code>[text minlength=3]</code></td>
</tr>
<tr>
<td><code>maxlength</code></td>
<td>text, textarea</td>
<td>Maximum character length</td>
<td><code>[text maxlength=50]</code></td>
</tr>
<tr>
<td><code>min</code></td>
<td>number, date</td>
<td>Minimum value/date</td>
<td><code>[number min=18]</code></td>
</tr>
<tr>
<td><code>max</code></td>
<td>number, date</td>
<td>Maximum value/date</td>
<td><code>[date max=&quot;2024-12-31&quot;]</code></td>
</tr>
<tr>
<td><code>step</code></td>
<td>number</td>
<td>Numeric step value</td>
<td><code>[number step=0.5]</code></td>
</tr>
<tr>
<td><code>pattern</code></td>
<td>text, tel</td>
<td>Regular expression pattern</td>
<td><code>[text pattern=&quot;[0-9]+&quot;]</code></td>
</tr>
<tr>
<td><code>title</code></td>
<td>All</td>
<td>Error message for pattern validation</td>
<td><code>[text pattern=&quot;[0-9]+&quot; title=&quot;Numbers only&quot;]</code></td>
</tr>
</tbody></table>
8:["$","$L16",null,{"currentSlug":"validation","children":["$","div",null,{"children":[["$","h1",null,{"className":"text-3xl font-bold text-gray-900 dark:text-white mb-6","children":"Form Validation"}],["$","article",null,{"className":"$17","dangerouslySetInnerHTML":{"__html":"$18"}}]]}]}]
b:null
f:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:null
d:{"metadata":[["$","title","0",{"children":"Formdown - Markdown-based Form Builder"}],["$","meta","1",{"name":"description","content":"Create beautiful, interactive HTML forms using a simple markdown-like syntax. Build forms quickly with real-time preview, validation, and seamless integration."}],["$","meta","2",{"name":"author","content":"iyulab"}],["$","link","3",{"rel":"manifest","href":"/manifest.webmanifest","crossOrigin":"$undefined"}],["$","meta","4",{"name":"keywords","content":"form builder,markdown forms,html forms,form generator,web forms,interactive forms,form validation,formdown,javascript forms,typescript forms"}],["$","meta","5",{"name":"creator","content":"iyulab"}],["$","meta","6",{"name":"publisher","content":"iyulab"}],["$","meta","7",{"name":"robots","content":"index, follow"}],["$","meta","8",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","9",{"rel":"canonical","href":"https://formdown.dev/"}],["$","meta","10",{"property":"og:title","content":"Formdown - Markdown-based Form Builder"}],["$","meta","11",{"property":"og:description","content":"Create beautiful, interactive HTML forms using a simple markdown-like syntax. Build forms quickly with real-time preview, validation, and seamless integration."}],["$","meta","12",{"property":"og:url","content":"https://formdown.dev/"}],["$","meta","13",{"property":"og:site_name","content":"Formdown"}],["$","meta","14",{"property":"og:locale","content":"en_US"}],["$","meta","15",{"property":"og:image","content":"https://formdown.dev/logo.png"}],["$","meta","16",{"property":"og:image:width","content":"1200"}],["$","meta","17",{"property":"og:image:height","content":"630"}],["$","meta","18",{"property":"og:image:alt","content":"Formdown - Markdown-based Form Builder"}],["$","meta","19",{"property":"og:type","content":"website"}],["$","meta","20",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","21",{"name":"twitter:title","content":"Formdown - Markdown-based Form Builder"}],["$","meta","22",{"name":"twitter:description","content":"Create beautiful, interactive HTML forms using a simple markdown-like syntax."}],["$","meta","23",{"name":"twitter:image","content":"https://formdown.dev/logo.png"}],["$","link","24",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"256x256"}]],"error":null,"digest":"$undefined"}
15:{"metadata":"$d:metadata","error":null,"digest":"$undefined"}
